 #!/bin/bash

XRDP_CONF_FILE="/etc/xrdp/xrdp.ini"
CERT_FILE="/etc/ssl/certs/ssl-cert-snakeoil.pem"
XRDP_START_FILE="/etc/xrdp/startwm.sh"


# setup tls encryption
# first param:  
setup_tls_encryption() {
        if [ -f "${XRDP_CONF_FILE}" ]; then
                if grep -q "security_layer=" "$XRDP_CONF_FILE"; then
                        sed -i "s/security_layer=.*/security_layer=tls/g" "$XRDP_CONF_FILE"
                fi
        fi
                
        local OLD_DNS_NAME
        local CURRENT_DNS_NAME
        OLD_DNS_NAME=$(openssl x509 -in "${CERT_FILE}" -text | grep "DNS:" | cut -d ':' -f2)
        CURRENT_DNS_NAME=$(nslookup $(hostname) | grep "Name:" | cut -f2)
        if [ "${OLD_DNS_NAME}" != "${CURRENT_DNS_NAME}" ]; then
                make-ssl-cert generate-default-snakeoil --force-overwrite
        fi
}

# allow multiple sessions for the same user (local and remote)
allow_multiple_sessions() {
        if [ -f "${XRDP_START_FILE}" ]; then
                if ! grep -q "unset DBUS_SESSION_BUS_ADDRESS" "$XRDP_START_FILE"; then
                        if grep -q "test -x /etc/X11/Xsession && exec /etc/X11/Xsession" "$XRDP_START_FILE"; then
                                sed -i "/^test -x \/etc\/X11\/Xsession && exec \/etc\/X11\/Xsession.*/i #hack to be able to log in via rdp even if user is locally already signed in\nunset DBUS_SESSION_BUS_ADDRESS\nunset XDG_RUNTIME_DIR\n" "$XRDP_START_FILE"
                        fi
                fi
        fi
}

setup_tls_encryption
 
allow_multiple_sessions

#add user xrdp to group ssl-cert in order to be able to use 
usermod -aG ssl-cert xrdp

systemctl enable xrdp
systemctl restart polkit


